# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
1.REARRANGE THE DIGITS

class Solution:
    def smallestnum (self,N):
        # code here
        s=[]
        for x in N:
           s.append(int(x))
        l=sorted(s)
        remain=""
        zeroes=""
        for i in l:
            if i==0:
                zeroes+=str(i)
            else:
                remain+=str(i)
        return int(remain[0]+zeroes+remain[1:])


2.MICS AND JURY

class Solution{
    static int micsandjury(int N,int M,int[] teams){
        //code here
        int left=1,right=0,ans=0;
        for(int i=0;i<M;i++){
         if(right<teams[i]){
         right=teams[i];
         }
        }
        while(left<=right){
            int mid=(left+right)/2;
            int group=0;
            for(int i=0;i<M;i++){
                if(teams[i]%mid!=0){
                group+=teams[i]/mid+1;}
                else{
                group+=teams[i]/mid;}
            }
            if(group>N){
                left=mid+1;}
            else{
               	ans=mid;
                right=mid-1;}
        }
        return ans;
    }
}
